{
  "name": "castv2-client",
  "version": "0.0.1",
  "description": "A Chromecast client based on the new (CASTV2) protocol",
  "author": {
    "name": "thibauts"
  },
  "license": "MIT",
  "main": "index.js",
  "dependencies": {
    "debug": "~1.0.1",
    "castv2": "~0.1.2"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thibauts/node-castv2-client.git"
  },
  "keywords": [
    "chromecast",
    "castv2"
  ],
  "readme": "castv2-client\r\n=============\r\n### A Chromecast client based on the new (CASTV2) protocol\r\n\r\nThis module implements a Chromecast client over the new (CASTV2) protocol. A sender app for the `DefaultMediaReceiver` application is provided, as well as an `Application` base class and implementations of the basic protocols (see the `controllers` directory) that should make implementing custom senders a breeze.\r\n\r\nThis implementation tries to stay close and true to the protocol. For details about protocol internals please see [https://github.com/thibauts/node-castv2](https://github.com/thibauts/node-castv2#protocol-description). \r\n\r\nInstallation\r\n------------\r\n\r\n``` bash\r\n$ npm install castv2-client\r\n```\r\n\r\nExamples\r\n--------\r\n\r\nLaunching a stream on the device :\r\n\r\n``` javascript\r\nvar Client                = require('castv2-client').Client;\r\nvar DefaultMediaReceiver  = require('castv2-client').DefaultMediaReceiver;\r\nvar mdns                  = require('mdns');\r\n\r\nvar browser = mdns.createBrowser(mdns.tcp('googlecast'));\r\n\r\nbrowser.on('serviceUp', function(service) {\r\n  console.log('found device \"%s\" at %s:%d', service.name, service.addresses[0], service.port);\r\n  ondeviceup(service.addresses[0]);\r\n  browser.stop();\r\n});\r\n\r\nbrowser.start();\r\n\r\nfunction ondeviceup(host) {\r\n\r\n  var client = new Client();\r\n\r\n  client.connect(host, function() {\r\n    console.log('connected, launching app ...');\r\n\r\n    client.launch(DefaultMediaReceiver, function(err, player) {\r\n      var media = {\r\n      \t// Here you can plug an URL to any mp4, webm, mp3 or jpg file.\r\n        contentId: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/big_buck_bunny_1080p.mp4'\r\n      };\r\n\r\n      player.on('status', function(status) {\r\n        console.log('status broadcast playerState=%s', status.playerState);\r\n      });\r\n\r\n      console.log('app \"%s\" launched, loading media %s ...', player.session.displayName, media.contentId);\r\n\r\n      player.load(media, { autoplay: true }, function(err, status) {\r\n        console.log('media loaded playerState=%s', status.playerState);\r\n      });\r\n\r\n    });\r\n    \r\n  });\r\n\r\n  client.on('error', function(err) {\r\n    console.log('Error: %s', err.message);\r\n    client.close();\r\n  });\r\n\r\n}\r\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/thibauts/node-castv2-client/issues"
  },
  "homepage": "https://github.com/thibauts/node-castv2-client",
  "_id": "castv2-client@0.0.1",
  "_from": "castv2-client@"
}
